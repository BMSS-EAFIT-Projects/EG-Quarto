# Chapter 1 – Descriptive Statistics with R & Python
In this chapter we introduce two of the most widely used programming languages for statistical analysis—R and Python.
Each has unique strengths: R offers a rich ecosystem of statistics-first packages (think ggplot2, dplyr, survival),
whereas Python shines for general-purpose data science and machine-learning pipelines (pandas, scikit-learn, TensorFlow).
Mastering both gives you the flexibility to jump between academic research workflows and industry data-science stacks.

We will not discuse the instalation of the required toolchains since there is a lot of good resources to learn this process
so we star with a walk through their basic syntax, data structures, and plotting libraries. Throughout the chapter you will
see side-by-side code snippets, allowing you to translate a task from one language to the other with minimal friction.

By the end of this chapter you will be able to

- import tabular data into R (readr) and Python (pandas);

- calculate key descriptive measures (mean, median, standard deviation, IQR);

- create quick exploratory graphics (scatterplots, histograms, boxplots) in both ggplot2 and seaborn;

- understand the typical workflow of a script or notebook in each language;

- decide which language—or combination of both—is the best fit for a given statistical problem.

Mastering these building blocks will prepare you for the next chapters, where we apply R and Python to more advanced
topics such as hypothesis testing, regression modelling, and simulation.


## Getting Started with R and Python
The first step in mastering any programming language is becoming familiar with its syntax—the set of rules that lets you communicate with a computer.
In practice, your code is passed to an interpreter or compiler that translates those human-readable instructions into machine language the hardware can execute.




### subsec
::: {.callout-note title="Example: Galton height data"}

::: {.panel-tabset}
### R
```{r}
#| label: galton-r
#| code-fold: true      # ← esto crea el botón “Código”
#| fig-width: 6
#| fig-height: 4
#| message: false
#| warning: false
library(readr)
library(ggplot2)

```
### Python
```{python}
#| label: galton-py
#| code-fold: true      # ← botón “Código”
#| fig-width: 6
#| fig-height: 4
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
```

:::
:::